REQUEST TYPE : GET
API URL : localhost:3000/url/long
PARAMS : KEY->shorturl VALUE-> '' DESCRIPTION-> 'ShortUrl Input to get longurl in return'
COOKIES{
  Name : _project_intern_session
  Value : ziA1K8Q2ZIOlWUkXOhFeNiZXtvhFF3%2FTKMdIA35MSGxS1LE%2Bzx5LvzL6ba3zF5iofschi7SbMecXFvkT9gk1FOa%2Bbj4wDUGNwFOftsmzJvO%2BFuuor7ck%2BQs1VlbKTvM5v8wh126v%2FhLOdpNN4EY%3D--9XiXR9Su0cFTgXa8--vf2TacnpzUnao%2FV5upCpCw%3D%3D
  Domain : localhost
  HttpOnly : True
  Secure : false
}
Content-Type →application/json; charset=utf-8
OUTPUT TYPE : JSON
output fields : status , longurl
Host: localhost:3000
Content-Type: application/x-www-form-urlencoded
cache-control: no-cache
GET /url/long?shorturl= HTTP/1.1
url = URI("http://localhost:3000/url/long?shorturl=")

REQUEST TYPE : POST
API URL : http://localhost:3000/urls/long
Content-Type →application/json; charset=utf-8'
COOKIES{
  Name : _project_intern_session
  Value : ziA1K8Q2ZIOlWUkXOhFeNiZXtvhFF3%2FTKMdIA35MSGxS1LE%2Bzx5LvzL6ba3zF5iofschi7SbMecXFvkT9gk1FOa%2Bbj4wDUGNwFOftsmzJvO%2BFuuor7ck%2BQs1VlbKTvM5v8wh126v%2FhLOdpNN4EY%3D--9XiXR9Su0cFTgXa8--vf2TacnpzUnao%2FV5upCpCw%3D%3D
  Domain : localhost
  HttpOnly : True
  Secure : false
}
PARAMS: longurl=>"" domain=>""
url = URI("http://localhost:3000/urls/long")
POST /urls/long HTTP/1.1
Host: localhost:3000
cache-control: no-cache
OUTPUT TYPE : JSON
output fields : status , shorturl

Action Name : new
Controller Name : Urls
Request Type : GET
Route Path : new_url
URI Pattern : /urls/new
Description : Check the authentication of the user and create a new instance.If not authenticated redirect it to the user login/signup page


Action Name: create_shorturl
Controller Name : Urls
Request Type : POST
Route Path : urls_long 
URI Pattern : /urls/long
Description : Take longurl and domain from params and serach on database for any existing entity.If foubd return the search object instance.If not call a method defined in the model call "create_short_url".Passing the parameters like longurl and domain.If the shorturl is successfully created and saved in database ,instance variable is return otherwise Null value is returned.Based on the returned input either the show action is called if successfully saved or error message is flashed on screen/json format regarding error

Action Name: show
Controller Name : Urls
Request Type : GET
Route Path : url
URI Pattern : /urls/:id
Description : Search for the url with id in the database .If found display it in html view


Action Name: search_longurl
Controller Name : Urls
Request Type : GET
Route Path : url_long 
URI Pattern : /url/long
Description : Take either shorturl or suffix as the input.Matches whether the input is shorturl or suffix.If shorturl is given as input, "find_short" method of url model is invoked ,this method search in the redis cache and DB and if found return instance of the url else nil. If the input is suffix , "find_suffix" method of url model is invoked ,his method search in the redis cache and DB and if found return instance of the url else nil.If the return value is nil it will return "Invalid url" error message either in json format or html view.If not nill it will show the longurl corresponding to the shorturl in json format.


Action Name: serach
Controller Name : Search
Request Type : GET
Route Path : url_search
URI Pattern : /url/search
Description : This action is called in order to perfrom elatic search.The input parameters are serach corressponding to inverted index created by default.The search results are shown on search.html.erb file


Action Name: index
Controller Name : Urlreports
Request Type : GET
Route Path : urlreport
URI Pattern : /urlreport
Description : Indexes all the records in the urlreports table and show their field on index.html.erb view page.


Action Name : new
Controller Name : Users
Request Type : GET
Route Path : user_new
URI Pattern : /users/new
Description : Create a new instance of user object  in order for singup page rendering 


Action Name : login
Controller Name : Users
Request Type : GET
Route Path : user_login
URI Pattern : /user/login
Description : Create a new instance of user object in order for login page rendering 

Action Name : signup
Controller Name : Users
Request Type : POST
Route Path : users_signup
URI Pattern : /users/signup
Description : 

Action Name : login_check
Controller Name : Users
Request Type : POST
Route Path : users_login
URI Pattern : /users/login
Description : 

Action Name : logout
Controller Name : Users
Request Type : GET
Route Path : user_logout
URI Pattern : /user/logout
Description : 



Action Name : set_session
Controller Name : Users
Description : 

